{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// // Описаний в документації\n// import flatpickr from './path/to/flatpickr';\n\n// // Додатковий імпорт стилів\n// import \"flatpickr/dist/flatpickr.min.css\";\n\n// // Описаний у документації\n// import iziToast from \"izitoast\";\n// // Додатковий імпорт стилів\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n// // ======================================================================================= >>>>>>>>>\n\n// const startBtn = document.querySelector('data-start');\n// const days = document.querySelector('span[data-days]');\n// const hours = document.querySelector('span[data-hours]');\n// const minutes = document.querySelector('span[data-minutes]');\n// const seconds = document.querySelector('span[data-seconds]');\n\n\n// startBtn.addEventListener('click', () => {\n//     const initTime = Date.now();\n\n//     setInterval(() => {\n//         const currentTime = Date.now();\n//         const diff = currentTime - initTime;\n\n//         const time = convertMs(diff);\n//         days.textContent = time.days; \n//         hours.textContent = time.hours; \n//         minutes.textContent = time.minutes; \n//         seconds.textContent = time.seconds; \n//     }, 1000);\n// });\n\n// // ======================================================================================= >>>>>>>>>\n\n//     const options = {\n//         enableTime: true,\n//         time_24hr: true,\n//         defaultDate: new Date(),\n//         minuteIncrement: 1,\n//         onClose(selectedDates) {\n//             if (selectedDates[0].getTime()<new Date().getTime()){\n//             iziToast.error();\n//             } else {\n//                 const myInterval = convertMs (selectedDates[0].getTime() - new Date().getTime())\n//             }\n//         console.log(selectedDates[0]);\n//         },\n//     };\n\n\n// // ======================================================================================= >>>>>>>>>\n\n// function convertMs(ms) {\n//     // Number of milliseconds per unit of time\n//     const second = 1000;\n//     const minute = second * 60;\n//     const hour = minute * 60;\n//     const day = hour * 24;\n\n//     // Remaining days\n//     const days = Math.floor(ms / day);\n//     // Remaining hours\n//     const hours = Math.floor((ms % day) / hour);\n//     // Remaining minutes\n//     const minutes = Math.floor(((ms % day) % hour) / minute);\n//     // Remaining seconds\n//     const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//     return { days, hours, minutes, seconds };\n//     }\n\n//   console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n//   console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n//   console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n// ======================================================================================= >>>>>>>>>\n\n\n// const startBtn = document.querySelector('data-start');\n// const days = document.querySelector('span[data-days]');\n// const hours = document.querySelector('span[data-hours]');\n// const minutes = document.querySelector('span[data-minutes]');\n// const seconds = document.querySelector('span[data-seconds]');\n\n// startBtn.addEventListener('click', () => {\n//     const initTime = Date.now();\n\n//     setInterval(() => {\n//         const currentTime = Date.now();\n//         const diff = currentTime - initTime;\n\n//         const time = convertMs(diff);\n//         days.textContent = time.days; \n//         hours.textContent = time.hours; \n//         minutes.textContent = time.minutes; \n//         seconds.textContent = time.seconds; \n//     }, 1000);\n// });\n\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// Отримуємо посилання на необхідні елементи з DOM\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst daysDisplay = document.querySelector('[data-days]');\nconst hoursDisplay = document.querySelector('[data-hours]');\nconst minutesDisplay = document.querySelector('[data-minutes]');\nconst secondsDisplay = document.querySelector('[data-seconds]');\n\nlet interval; // Змінна для зберігання ідентифікатора інтервалу\n\n// Функція для підрахунку часу та оновлення інтерфейсу таймера\nfunction updateTimer(endTime) {\n    const currentTime = new Date().getTime();\n    const timeRemaining = endTime - currentTime;\n\n    if (timeRemaining <= 0) {\n        clearInterval(interval); // Зупиняємо таймер, якщо час вийшов\n        iziToast.success({ message: \"Time's up!\" }); // Повідомлення про завершення часу\n        return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n\n    // Оновлення значень у відповідних елементах\n    daysDisplay.textContent = addLeadingZero(days);\n    hoursDisplay.textContent = addLeadingZero(hours);\n    minutesDisplay.textContent = addLeadingZero(minutes);\n    secondsDisplay.textContent = addLeadingZero(seconds);\n}\n\n// Функція для перевірки і форматування значень часу\nfunction addLeadingZero(value) {\n    return value < 10 ? `0${value}` : value;\n}\n\n// Функція для конвертації мілісекунд у об'єкт з часом\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor((ms % hour) / minute);\n    const seconds = Math.floor((ms % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\n// Обробник події для кнопки \"Start\"\nstartBtn.addEventListener('click', () => {\n    const selectedDate = new Date(dateTimePicker.value).getTime();\n\n    // Перевірка на валідну дату\n    if (isNaN(selectedDate) || selectedDate <= Date.now()) {\n        iziToast.error({ message: \"Please choose a date in the future\" });\n        return;\n    }\n\n    // Оновлення інтерфейсу\n    updateTimer(selectedDate);\n\n    // Запуск таймера\n    interval = setInterval(() => {\n        updateTimer(selectedDate);\n    }, 1000);\n\n    // Вимикаємо кнопку \"Start\" та поле вибору дати\n    startBtn.disabled = true;\n    dateTimePicker.disabled = true;\n});\n\n// Ініціалізація календаря flatpickr\nflatpickr(dateTimePicker, {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n});"],"names":["startBtn","dateTimePicker","daysDisplay","hoursDisplay","minutesDisplay","secondsDisplay","interval","updateTimer","endTime","currentTime","timeRemaining","iziToast","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms","selectedDate","flatpickr"],"mappings":"sGA6GA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAGJ,SAASC,EAAYC,EAAS,CAC1B,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCC,EAAgBF,EAAUC,EAEhC,GAAIC,GAAiB,EAAG,CACpB,cAAcJ,CAAQ,EACtBK,EAAS,QAAQ,CAAE,QAAS,YAAc,CAAA,EAC1C,MACH,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAa,EAGjER,EAAY,YAAce,EAAeL,CAAI,EAC7CT,EAAa,YAAcc,EAAeJ,CAAK,EAC/CT,EAAe,YAAca,EAAeH,CAAO,EACnDT,EAAe,YAAcY,EAAeF,CAAO,CACvD,CAGA,SAASE,EAAeC,EAAO,CAC3B,OAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACtC,CAGA,SAASF,EAAUG,EAAI,CAMnB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAOK,EAAK,KAAQ,GAAM,EACzCJ,EAAU,KAAK,MAAOI,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAGAf,EAAS,iBAAiB,QAAS,IAAM,CACrC,MAAMoB,EAAe,IAAI,KAAKnB,EAAe,KAAK,EAAE,UAGpD,GAAI,MAAMmB,CAAY,GAAKA,GAAgB,KAAK,IAAG,EAAI,CACnDT,EAAS,MAAM,CAAE,QAAS,oCAAsC,CAAA,EAChE,MACH,CAGDJ,EAAYa,CAAY,EAGxBd,EAAW,YAAY,IAAM,CACzBC,EAAYa,CAAY,CAC3B,EAAE,GAAI,EAGPpB,EAAS,SAAW,GACpBC,EAAe,SAAW,EAC9B,CAAC,EAGDoB,EAAUpB,EAAgB,CACtB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,CACrB,CAAC"}